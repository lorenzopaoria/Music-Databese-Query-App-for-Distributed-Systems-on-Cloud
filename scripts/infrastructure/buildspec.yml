version: 0.2

phases:
  install:
    runtime-versions:
      java: corretto17
    commands:
      - echo "Install phase"
      # Installa Docker CLI per la build del container
      - curl -fsSL https://get.docker.com -o get-docker.sh
      - sh get-docker.sh
      - sudo usermod -aG docker $(whoami) # Aggiungi l'utente corrente al gruppo docker
      - newgrp docker # Applica le modifiche al gruppo Docker
      - echo "Docker installed and user added to docker group."
  build:
    commands:
      - cd mvnProject-Server
      - mvn clean install
      - echo "Build completed for Maven project."
      # Build dell'immagine Docker
      - echo "Building Docker image..."
      # Assicurati che AWS CLI sia configurato e autenticato per ECR
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 123456789012.dkr.ecr.us-east-1.amazonaws.com # Sostituisci con il tuo Account ID AWS
      - docker build -t musicapp-server:latest .
      - docker tag musicapp-server:latest 123456789012.dkr.ecr.us-east-1.amazonaws.com/musicapp-server:latest # Sostituisci con il tuo Account ID AWS
      - docker push 123456789012.dkr.ecr.us-east-1.amazonaws.com/musicapp-server:latest # Sostituisci con il tuo Account ID AWS
      - echo "Docker image pushed to ECR."
artifacts:
  files:
    - mvnProject-Server/target/*.jar # Potrebbe non essere pi√π strettamente necessario per Docker
    - appspec.yml # Copia appspec.yml nella root dell'artifact
    - scripts/infrastructure/restart_docker_server.sh # Assicurati che lo script di restart sia nell'artifact
    - deploy_config.json # Assicurati che il file di configurazione sia nell'artifact
  discard-paths: yes # Importante per avere appspec.yml e gli script alla root dell'artifact